{
    "info": {
        "name": "Eiffage Backend API",
        "description": "Complete API collection for Eiffage Backend with authentication and skills management",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "version": "1.0.0"
    },
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{accessToken}}",
                "type": "string"
            }
        ]
    },
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:3000",
            "type": "string"
        },
        {
            "key": "accessToken",
            "value": "",
            "type": "string"
        },
        {
            "key": "refreshToken",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Register User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/signup",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "signup"
                            ]
                        },
                        "description": "Register a new user account"
                    },
                    "response": []
                },
                {
                    "name": "Login User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.collectionVariables.set('accessToken', responseJson.accessToken);",
                                    "    pm.collectionVariables.set('refreshToken', responseJson.refreshToken);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/signin",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "signin"
                            ]
                        },
                        "description": "Login user and get access and refresh tokens"
                    },
                    "response": []
                },
                {
                    "name": "Refresh Access Token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.collectionVariables.set('accessToken', responseJson.accessToken);",
                                    "    pm.collectionVariables.set('refreshToken', responseJson.refreshToken);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/refresh",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "refresh"
                            ]
                        },
                        "description": "Refresh access token using refresh token"
                    },
                    "response": []
                },
                {
                    "name": "Request Password Reset Token",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"user@example.com\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/reset-password-token",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "reset-password-token"
                            ]
                        },
                        "description": "Request a password reset token to be sent to the user's email"
                    },
                    "response": []
                },
                {
                    "name": "Reset Password",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"password\": \"newpassword123\",\n  \"token\": \"reset-token-from-email\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/reset-password",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "reset-password"
                            ]
                        },
                        "description": "Reset password using the token received in email"
                    },
                    "response": []
                }
            ],
            "description": "Authentication endpoints for user registration, login, and password management"
        },
        {
            "name": "User Management",
            "item": [
                {
                    "name": "Get Current User Profile",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/users/me",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                "me"
                            ]
                        },
                        "description": "Get the profile of the currently authenticated user"
                    },
                    "response": []
                }
            ],
            "description": "User profile management endpoints"
        },
        {
            "name": "Admin - User Management",
            "item": [
                {
                    "name": "Get All Users",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/admin/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "admin",
                                "users"
                            ]
                        },
                        "description": "Get all users (Admin only)"
                    },
                    "response": []
                },
                {
                    "name": "Create User Without Password",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"admin-created@example.com\",\n  \"firstName\": \"Admin\",\n  \"lastName\": \"Created\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/admin/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "admin",
                                "users"
                            ]
                        },
                        "description": "Create a new user without password (Admin only)"
                    },
                    "response": []
                },
                {
                    "name": "Create User via Auth Endpoint (Admin)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"admin-auth-created@example.com\",\n  \"firstName\": \"Admin\",\n  \"lastName\": \"AuthCreated\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "users"
                            ]
                        },
                        "description": "Create a new user without password via auth endpoint (Admin only)"
                    },
                    "response": []
                }
            ],
            "description": "Admin-only endpoints for user management"
        },
        {
            "name": "Skills Management",
            "item": [
                {
                    "name": "MacroSkillTypes",
                    "item": [
                        {
                            "name": "Get All MacroSkillTypes",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/macro-skill-types",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "macro-skill-types"
                                    ]
                                },
                                "description": "Get all macro skill types"
                            },
                            "response": []
                        },
                        {
                            "name": "Get MacroSkillType by ID",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/macro-skill-types/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "macro-skill-types",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id",
                                            "value": "macro-skill-type-id",
                                            "description": "The ID of the macro skill type"
                                        }
                                    ]
                                },
                                "description": "Get a specific macro skill type by ID"
                            },
                            "response": []
                        },
                        {
                            "name": "Create MacroSkillType",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"Technical Skills\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/macro-skill-types",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "macro-skill-types"
                                    ]
                                },
                                "description": "Create a new macro skill type"
                            },
                            "response": []
                        }
                    ],
                    "description": "Endpoints for managing macro skill types"
                },
                {
                    "name": "MacroSkills",
                    "item": [
                        {
                            "name": "Get All MacroSkills",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/macro-skills",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "macro-skills"
                                    ]
                                },
                                "description": "Get all macro skills"
                            },
                            "response": []
                        },
                        {
                            "name": "Get MacroSkill by ID",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/macro-skills/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "macro-skills",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id",
                                            "value": "macro-skill-id",
                                            "description": "The ID of the macro skill"
                                        }
                                    ]
                                },
                                "description": "Get a specific macro skill by ID"
                            },
                            "response": []
                        },
                        {
                            "name": "Create MacroSkill",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"Programming Languages\",\n  \"macroSkillTypeId\": \"macro-skill-type-id\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/macro-skills",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "macro-skills"
                                    ]
                                },
                                "description": "Create a new macro skill"
                            },
                            "response": []
                        }
                    ],
                    "description": "Endpoints for managing macro skills"
                },
                {
                    "name": "Skills",
                    "item": [
                        {
                            "name": "Get All Skills",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/skills",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "skills"
                                    ]
                                },
                                "description": "Get all skills"
                            },
                            "response": []
                        },
                        {
                            "name": "Get Skill by ID",
                            "request": {
                                "method": "GET",
                                "header": [],
                                "url": {
                                    "raw": "{{baseUrl}}/api/skills/:id",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "skills",
                                        ":id"
                                    ],
                                    "variable": [
                                        {
                                            "key": "id",
                                            "value": "skill-id",
                                            "description": "The ID of the skill"
                                        }
                                    ]
                                },
                                "description": "Get a specific skill by ID"
                            },
                            "response": []
                        },
                        {
                            "name": "Create Skill",
                            "request": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"name\": \"JavaScript\",\n  \"expectedLevel\": \"Advanced\",\n  \"macroSkillId\": \"macro-skill-id\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/api/skills",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "api",
                                        "skills"
                                    ]
                                },
                                "description": "Create a new skill"
                            },
                            "response": []
                        }
                    ],
                    "description": "Endpoints for managing individual skills"
                }
            ],
            "description": "Skills management system endpoints"
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ]
}